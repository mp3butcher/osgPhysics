/* -*-c++-*- OpenSceneGraph - Copyright (C) 1998-2011 Robert
 *
 * This library is open source and may be redistributed and/or modified under  
 * the terms of the OpenSceneGraph Public License (OSGPL) version 0.0 or 
 * (at your option) any later version.  The full license is in LICENSE file
 * included with this distribution, and on the openscenegraph.org website.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * OpenSceneGraph Public License for more details.
*/
// Written by Wang Rui & Sukender

#ifndef OSGPHYSICS_RIGIDELEMENT
#define OSGPHYSICS_RIGIDELEMENT 1

#include <osg/Node>
#include <osgPhysics/BaseElement>

namespace osgPhysics {

/** The rigid body element of the physics abstract layer */
class OSGPHYSICS_EXPORT RigidElement : public BaseElement
{
public:
    RigidElement();
    RigidElement( const RigidElement& copy, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY );
    META_Object( osgPhysics, RigidElement );
    
    virtual RigidElement* asRigidElement() { return this; }
    virtual const RigidElement* asRigidElement() const { return this; }
    
    BodyAttribute* getOrCreateAttributeMap();
    
    /** Reallocate the element for the first time or it's dirty */
    virtual void reallocate( osg::Node* node, osg::NodeVisitor* nv, bool recreated=false );
    
    /** Update the element */
    virtual void update( osg::Node* node, osg::NodeVisitor* nv );
    
protected:
    virtual ~RigidElement();
};

}

#endif
